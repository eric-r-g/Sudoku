def verificar_jogada(entrada_div):
    var_inutil, coluna, linha, conteudo = entrada_div

    retorno = [-1, coluna, linha, conteudo]
    
    if linha < 0 or linha > 8 or coluna < 0 or coluna > 8:
        retorno = [1]
    elif eh_pista[linha][coluna]:
        retorno = [2]
    elif conteudo == '?':
      if matriz[linha][coluna] != " ":
        retorno = [3]
    elif conteudo == '!':
        if matriz[linha][coluna] == " ":
            retorno = [4]
    else:
        try:
            conteudo = int(conteudo) - 1
            quadrante = coluna // 3 + 3 * (linha // 3)
            if conteudo < 0 or conteudo > 8:
                retorno = [5]
            elif num_pres_linha[linha][conteudo] or num_pres_coluna[coluna][conteudo] or num_pres_quadrante[quadrante][conteudo]:
                retorno = [6]
        except ValueError:
            return retorno
    return retorno
            

def formatacao(entrada):
    try:
        entrada = entrada.replace(" ","").strip().upper()
        if "?" in entrada:
            coluna, linha = entrada.replace("?","").split(",")
            conteudo = "?"
        elif "!" in entrada:
            coluna, linha = entrada.replace("!","").split(",")
            conteudo = "!"
        else:
            entrada, conteudo = entrada.split(":")
            coluna, linha = entrada.split(",")
            conteudo = int(conteudo)
        
        # permite a ordem da linha e coluna de qualquer forma 
        if not linha.isnumeric():
            linha, coluna = coluna, linha
        linha = int(linha) - 1
        coluna = ord(coluna) - 65
        
        if coluna < 0 or coluna > 25:
            return[0]
    except ValueError:
        return[0]
    return[-1, coluna, linha, conteudo]


    
def form_e_verif_entrada(entr):
    entr = formatacao(entr)

    if entr[0] == 0:
        return[0]
    else:
        return verificar_jogada(entr)
        
